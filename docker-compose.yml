version: "3.1"

services:
  backend:
    container_name: "backend"
    restart: always
    depends_on:
      - store_prod_db
    build:
      dockerfile: Dockerfile
      context: ./backend
    command: npm run dev
    environment:
      - MYSQL_DATABASE=store_db
      - MYSQL_ROOT_PASSWORD=storeroot
      - MYSQL_USER=root
      - MYSQL_LOCALHOST=store_prod_db
      - MYSQL_PORT=3306
      - API_PORT=3333
      - MAIL_HOST=smtp.gmail.com
      - MAIL_PORT=587
      - MAIL_USER=easysaleproject@gmail.com
      - MAIL_PASSWORD=nvemoxkcqxxxpawi
      - SECRET_KEY=7895d135d8c67f8908db131cf1b4f530
      - ADMIN_NAME=Admin
      - ADMIN_EMAIL=ianmarconysalazar@outlook.com
      - ADMIN_CPF=05327205207
      - ADMIN_PASSWORD=2d05c6f6e1b2249386e8fcf1eecf97ee
  migration:
    container_name: "migration"
    depends_on:
      - store_prod_db
    build:
      dockerfile: Dockerfile
      context: ./backend
    command: npm run migration:run
    environment:
      - MYSQL_DATABASE=store_db
      - MYSQL_ROOT_PASSWORD=storeroot
      - MYSQL_USER=root
      - MYSQL_LOCALHOST=store_prod_db
      - MYSQL_PORT=3306
      - ADMIN_NAME=Admin
      - ADMIN_EMAIL=ianmarconysalazar@outlook.com
      - ADMIN_CPF=05327205207
      - ADMIN_PASSWORD=2d05c6f6e1b2249386e8fcf1eecf97ee

  frontend:
    container_name: "frontend"
    build:
      context: ./frontend
      dockerfile: Dockerfile
    depends_on:
      - backend
      - store_prod_db
    ports:
      - 8080:3000
    environment:
      - API_URL=http://backend:3333
      - NAME_STORAGE=@Shop

  store_prod_db:
    container_name: "store_prod_db"
    image: mysql
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_DATABASE: store_db
      MYSQL_ROOT_PASSWORD: storeroot

networks:
  default:
    name: web
